#+TITLE:  使用 matlab 的 surface 和 contour 画图
#+AUTHOR:    zcl.space
#+EMAIL:     emacsun@163.com
#+DATE:
#+DESCRIPTION:
#+KEYWORDS: matlab surface contour
#+CATEGORIES: communication
#+SETUPFILE: ~/.emacs.d/org-templates/matlab-level2.org
#+HTML_HEAD_EXTRA: <a id="pdf"  href="./maltab-surface-contour.pdf"><img src="../../img/assets/pdf.png"></a>

* 简介
  [2017-07-08 Sat 11:49]

matlab 提供了两个酷炫的函数[[https://www.mathworks.com/help/matlab/ref/surface.html?searchHighlight=surface&s_tid=doc_srchtitle][surface]] 和[[https://www.mathworks.com/help/matlab/ref/contour.html?searchHighlight=contour&s_tid=doc_srchtitle][contour]] 用来画多维函数的图形。通过这两个函数我们可以对多维函数进行更直观的观察。

本文以函数：
\begin{equation}
\label{eq:1}
z = x\exp(-x^{2} + y^{2})
\end{equation}
为例，介绍 surface 和 contour 的实用方法。

* surface
  [2017-07-08 Sat 12:27]

看代码：
#+begin_src matlab -n
[X,Y] = meshgrid(-2:0.2:2,-2:0.2:2);
Z = X.*exp(-X.^2 - Y.^2);
figure
surface(X,Y,Z)
view(3)
#+end_src

结果如图：
#+CAPTION:  surface 示例
#+ATTR_HTML:  :width 400 :align center
#+NAME: fig:20170708surface
#+ATTR_LATEX: :width 0.6\textwidth :align center
[[../../img/communication_matlab/20170708surface.png]]

注意在画图的时候，最后一句 =view(3)= 是必须的。不然 matlab 会默认使用 =view(2)= ,看到的会是二维的平面截图。

* contour
  [2017-07-08 Sat 12:33]

contour 的功能是画一个多维函数的等高线。

看代码：
#+begin_src matlab -n
x = -2:0.2:2;
y = -2:0.2:3;
[X,Y] = meshgrid(x,y);
Z = X.*exp(-X.^2-Y.^2);

figure
contour(X,Y,Z,'ShowText','on')
#+end_src

结果如图[[fig:20170708contour]]：
#+CAPTION:  contour 示例
#+ATTR_HTML:  :width 400 :align center
#+NAME: fig:20170708contour
#+ATTR_LATEX: :width 0.6\textwidth :align center
[[../../img/communication_matlab/20170708contour.png]]

matlab 的帮助手册中有关于 contour 的更详细的说明，包括一些画图的技巧，等高线的间隔，高亮某条等高线等等。

* gradient
  [2017-07-08 Sat 12:48]

在 contour 的基础上，我们看看\(xe^{-x^{2} - y^{2}}\)的梯度示意图[[fig:20170708gradient]]。
#+begin_src matlab -n
x = -2:0.2:2;
y = x';
z = x .* exp(-x.^2 - y.^2);
[px,py] = gradient(z);
figure
contour(x,y,z)
hold on
quiver(x,y,px,py)
hold off
#+end_src

结果如图[[fig:20170708gradient]]所示：
#+CAPTION:  \(xe^{-x^{2} - y^{2}}\)的梯度示意图
#+ATTR_HTML:  :width 400 :align center
#+NAME: fig:20170708gradient
#+ATTR_LATEX: :width 0.6\textwidth :align center
[[../../img/communication_matlab/20170708gradient.png]]

图[[fig:20170708gradient]]中的箭头所指是图[[fig:20170708surface]]中从蓝色到橙色，即箭头部分永远指向更高的位置。
* 高维高斯分布
  [2017-08-13 Sun 08:13]

  为了图形直观，以二维为例。向更高维度的扩展是显而易见的，但是通过contourf这样的函数实现高维几何直观就显得超出人类能力范围。

  假设均值为\(\mathbf{\mu}\)，方差为\(\mathbf{\Sigma}\)，则高维高斯分布可以表示为：
\begin{equation}
\label{eq:2}
p(\mathbf{x}|\mathbf{\mu},\mathbf{\Sigma}) = \frac{1}{(2\pi)^{D/2} |\mathbf{\Sigma}|^{1/2} } \exp(- (\mathbf{x} - \mu)^{T}\mathbf{\Sigma}^{-1} (\mathbf{x} - \mathbf{\mu}) )
\end{equation}

#+begin_src matlab -n
stepSize = 0.2; %0.05;
[x,y] = meshgrid(-1:stepSize:1,-1:stepSize:1); % Create grid.
[r,c]=size(x);
data = [x(:) y(:)];
p = func(data);
p = reshape(p, r, c);

contourf(x,y,p,256,'LineColor','none');
colormap(jet(256));
axis square;
set(gca,'XTick',[-1,0,1]);
set(gca,'YTick',[-1,0,1]);
xlabel(' W0 ');
ylabel(' W1 ','Rotation',0);

#+end_src
这里的 =func= 是函数句柄。其原型为：
#+begin_src matlab -n
priorMean = [0;0];
priorSigma = eye(2)./priorPrecision; %Covariance Matrix
priorPDF = @(W)gaussProb(W,priorMean',priorSigma);
#+end_src
=gaussProb= 实现了式~(\ref{eq:2})。
图[[fig:20170813countour]]展示了最终的结果：
#+CAPTION:  使用countourf画二维高斯图形。
#+ATTR_HTML:  :width 400 :align center
#+NAME: fig:20170813countour
#+ATTR_LATEX: :width 0.6\textwidth :align center
[[../../img/communication_matlab/20170813contour.png]]

颜色越靠近红色，概率越高；越靠近蓝色概率越低。

当我们改变\(\mathbf{\mu}\)和\(\mathbf{\Sigma}\)的值时，其形状也会发生变化。比如，我们令:
\begin{equation}
\label{eq:3}
\mathbf{\mu} = [0.2 \quad 0.4]
\end{equation}
\begin{equation}
\label{eq:4}
\mathbf{\Sigma} =
\begin{bmatrix}
0.4 & 0 \\
0 & 0.2
\end{bmatrix}
\end{equation}
其结果如图[[fig:20170813countour2]]所示：
#+CAPTION:  使用countourf画二维高斯图形。
#+ATTR_HTML:  :width 400 :align center
#+NAME: fig:20170813countour2
#+ATTR_LATEX: :width 0.6\textwidth :align center
[[../../img/communication_matlab/20170813contour2.png]]

如果在上面的代码中使用 =contour= ，我们可以看到图[[fig:20170813countour3]]：
#+CAPTION:  使用countour画二维高斯图形。
#+ATTR_HTML:  :width 400 :align center
#+NAME: fig:20170813countour3
#+ATTR_LATEX: :width 0.6\textwidth :align center
[[../../img/communication_matlab/20170813contour3.png]]

=contour= 又找回了等高线的感觉， =contourf= 则为这些等高线之间进行颜色插值蒙上一个表面。
